# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    macos:
      xcode: 14.0.1 # Specify the Xcode version to use
    working_directory: /Users/distiller/project
    shell: /bin/bash --login -o pipefail
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: test

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: bundle install
      - run:
        name: fastlane
        command: bundle exec fastlane $FASTLANE_LANE
      - run: pod lib lint

      # Collect XML test results data to show in the UI, and save the same XML
      # files under test-results folder in the Artifacts tab
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/scan

  deploy-to-cocoapods:
    macos:
      xcode: 14.0.1 
    
    steps:
      - checkout
      - run: pod trunk push

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  DeployCocoapods: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-to-cocoapods:
          requires:
            - build-and-test
